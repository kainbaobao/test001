<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxt.dao.PayInMapper" >
  <resultMap id="BaseResultMap" type="com.sxt.dto.PayIn" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
    <result column="aname" property="aname" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap> 
  <sql id="Base_Column_List" >
    p.id, name, p.type as type, p.money, aid, 
		p.create_time as createTime, p.update_time as updateTime, p.remark, aname
  </sql>
  
  <select id="queryById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_in p left join account a on(p.aid=a.id)
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.sxt.dto.PayIn" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="aid != null" >
        aid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
    
    
  </insert>
  
  
  
  
  
  
  
  <update id="update" parameterType="com.sxt.dto.PayIn" >
    update account
    <set >
      <if test="aname != null" >
        aname = #{aname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="queryForPage" resultType="PayIn">
  	select 
    <include refid="Base_Column_List" />
    from pay_in p left join account a on(p.aid=a.id)
   	<where>
   	<if test="@Ognl@isNotEmpty(p_name)">
   		and name like concat("%",#{p_name},"%")
   	</if>
   	<if test="@Ognl@isNotEmpty(p_type)">
   		and type =#{p_type}
   	</if>
   	<if test="@Ognl@isNotEmpty(p_time)">
   			    	 <![CDATA[
	            and create_time <=#{p_time}
	        ]]>
   	</if>
   	</where> 
   
  </select>
  
    <delete id="delAccountBatch" parameterType="map">
   	delete from account where id in 
   	<foreach collection="ids" item="item" open="(" separator="," close=")">
   		#{item}
   	</foreach>
  </delete>
  
  
</mapper>